//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:2.0.50727.3603
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface TripiSilverlightWCFService
{
    
    int CreateNewTrip(string username);
    
    Trip[] GetTripsForUser(string username);
    
    PositionNode[] GetPositionNodesForTrip(int tripID);
    
    void AddPositionNode(PositionNode node);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="CreateNewTrip", Namespace="")]
public partial class CreateNewTripRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="", Order=0)]
    public string username;
    
    public CreateNewTripRequest()
    {
    }
    
    public CreateNewTripRequest(string username)
    {
        this.username = username;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="CreateNewTripResponse", Namespace="")]
public partial class CreateNewTripResponse
{
    
    [System.Xml.Serialization.XmlElementAttribute(Namespace="", Order=0)]
    public int CreateNewTripResult;
    
    public CreateNewTripResponse()
    {
    }
    
    public CreateNewTripResponse(int CreateNewTripResult)
    {
        this.CreateNewTripResult = CreateNewTripResult;
    }
}

/// <uwagi/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("NetCFSvcUtil", "3.5.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TripiWCF.Service")]
public partial class Trip
{
    
    private int idField;
    
    private bool idFieldSpecified;
    
    private string usernameField;
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public int ID
    {
        get
        {
            return this.idField;
        }
        set
        {
            this.idField = value;
        }
    }
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IDSpecified
    {
        get
        {
            return this.idFieldSpecified;
        }
        set
        {
            this.idFieldSpecified = value;
        }
    }
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
    public string Username
    {
        get
        {
            return this.usernameField;
        }
        set
        {
            this.usernameField = value;
        }
    }
}

/// <uwagi/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("NetCFSvcUtil", "3.5.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TripiWCF.Service")]
public partial class PositionNode
{
    
    private System.DateTime creationTimeField;
    
    private bool creationTimeFieldSpecified;
    
    private double latitudeField;
    
    private bool latitudeFieldSpecified;
    
    private double longitudeField;
    
    private bool longitudeFieldSpecified;
    
    private int tripIDField;
    
    private bool tripIDFieldSpecified;
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public System.DateTime CreationTime
    {
        get
        {
            return this.creationTimeField;
        }
        set
        {
            this.creationTimeField = value;
        }
    }
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CreationTimeSpecified
    {
        get
        {
            return this.creationTimeFieldSpecified;
        }
        set
        {
            this.creationTimeFieldSpecified = value;
        }
    }
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public double Latitude
    {
        get
        {
            return this.latitudeField;
        }
        set
        {
            this.latitudeField = value;
        }
    }
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LatitudeSpecified
    {
        get
        {
            return this.latitudeFieldSpecified;
        }
        set
        {
            this.latitudeFieldSpecified = value;
        }
    }
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public double Longitude
    {
        get
        {
            return this.longitudeField;
        }
        set
        {
            this.longitudeField = value;
        }
    }
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LongitudeSpecified
    {
        get
        {
            return this.longitudeFieldSpecified;
        }
        set
        {
            this.longitudeFieldSpecified = value;
        }
    }
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public int TripID
    {
        get
        {
            return this.tripIDField;
        }
        set
        {
            this.tripIDField = value;
        }
    }
    
    /// <uwagi/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TripIDSpecified
    {
        get
        {
            return this.tripIDFieldSpecified;
        }
        set
        {
            this.tripIDFieldSpecified = value;
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetTripsForUser", Namespace="")]
public partial class GetTripsForUserRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="", Order=0)]
    public string username;
    
    public GetTripsForUserRequest()
    {
    }
    
    public GetTripsForUserRequest(string username)
    {
        this.username = username;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetTripsForUserResponse", Namespace="")]
public partial class GetTripsForUserResponse
{
    
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace="", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/TripiWCF.Service")]
    public Trip[] GetTripsForUserResult;
    
    public GetTripsForUserResponse()
    {
    }
    
    public GetTripsForUserResponse(Trip[] GetTripsForUserResult)
    {
        this.GetTripsForUserResult = GetTripsForUserResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetPositionNodesForTrip", Namespace="")]
public partial class GetPositionNodesForTripRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(Namespace="", Order=0)]
    public int tripID;
    
    public GetPositionNodesForTripRequest()
    {
    }
    
    public GetPositionNodesForTripRequest(int tripID)
    {
        this.tripID = tripID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetPositionNodesForTripResponse", Namespace="")]
public partial class GetPositionNodesForTripResponse
{
    
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace="", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/TripiWCF.Service")]
    public PositionNode[] GetPositionNodesForTripResult;
    
    public GetPositionNodesForTripResponse()
    {
    }
    
    public GetPositionNodesForTripResponse(PositionNode[] GetPositionNodesForTripResult)
    {
        this.GetPositionNodesForTripResult = GetPositionNodesForTripResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="AddPositionNode", Namespace="")]
public partial class AddPositionNodeRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="", Order=0)]
    public PositionNode node;
    
    public AddPositionNodeRequest()
    {
    }
    
    public AddPositionNodeRequest(PositionNode node)
    {
        this.node = node;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="AddPositionNodeResponse", Namespace="")]
public partial class AddPositionNodeResponse
{
    
    public AddPositionNodeResponse()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class TripiSilverlightWCFServiceClient : Microsoft.Tools.ServiceModel.CFClientBase<TripiSilverlightWCFService>, TripiSilverlightWCFService
{
    
    public static System.ServiceModel.EndpointAddress EndpointAddress = new System.ServiceModel.EndpointAddress("http://localhost:1094/TripiSilverlightWCFService.svc");
    
    public TripiSilverlightWCFServiceClient() : 
            this(CreateDefaultBinding(), EndpointAddress)
    {
    }
    
    public TripiSilverlightWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
        addProtectionRequirements(binding);
    }
    
    private CreateNewTripResponse CreateNewTrip(CreateNewTripRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "urn:TripiSilverlightWCFService/CreateNewTrip";
        info.RequestIsWrapped = true;
        info.ReplyAction = "urn:TripiSilverlightWCFService/CreateNewTripResponse";
        info.ResponseIsWrapped = true;
        CreateNewTripResponse retVal = base.Invoke<CreateNewTripRequest, CreateNewTripResponse>(info, request);
        return retVal;
    }
    
    public int CreateNewTrip(string username)
    {
        CreateNewTripRequest request = new CreateNewTripRequest(username);
        CreateNewTripResponse response = this.CreateNewTrip(request);
        return response.CreateNewTripResult;
    }
    
    private GetTripsForUserResponse GetTripsForUser(GetTripsForUserRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "urn:TripiSilverlightWCFService/GetTripsForUser";
        info.RequestIsWrapped = true;
        info.ReplyAction = "urn:TripiSilverlightWCFService/GetTripsForUserResponse";
        info.ResponseIsWrapped = true;
        GetTripsForUserResponse retVal = base.Invoke<GetTripsForUserRequest, GetTripsForUserResponse>(info, request);
        return retVal;
    }
    
    public Trip[] GetTripsForUser(string username)
    {
        GetTripsForUserRequest request = new GetTripsForUserRequest(username);
        GetTripsForUserResponse response = this.GetTripsForUser(request);
        return response.GetTripsForUserResult;
    }
    
    private GetPositionNodesForTripResponse GetPositionNodesForTrip(GetPositionNodesForTripRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "urn:TripiSilverlightWCFService/GetPositionNodesForTrip";
        info.RequestIsWrapped = true;
        info.ReplyAction = "urn:TripiSilverlightWCFService/GetPositionNodesForTripResponse";
        info.ResponseIsWrapped = true;
        GetPositionNodesForTripResponse retVal = base.Invoke<GetPositionNodesForTripRequest, GetPositionNodesForTripResponse>(info, request);
        return retVal;
    }
    
    public PositionNode[] GetPositionNodesForTrip(int tripID)
    {
        GetPositionNodesForTripRequest request = new GetPositionNodesForTripRequest(tripID);
        GetPositionNodesForTripResponse response = this.GetPositionNodesForTrip(request);
        return response.GetPositionNodesForTripResult;
    }
    
    private AddPositionNodeResponse AddPositionNode(AddPositionNodeRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "urn:TripiSilverlightWCFService/AddPositionNode";
        info.RequestIsWrapped = true;
        info.ReplyAction = "urn:TripiSilverlightWCFService/AddPositionNodeResponse";
        info.ResponseIsWrapped = true;
        AddPositionNodeResponse retVal = base.Invoke<AddPositionNodeRequest, AddPositionNodeResponse>(info, request);
        return retVal;
    }
    
    public void AddPositionNode(PositionNode node)
    {
        AddPositionNodeRequest request = new AddPositionNodeRequest(node);
        AddPositionNodeResponse response = this.AddPositionNode(request);
    }
    
    public static System.ServiceModel.Channels.Binding CreateDefaultBinding()
    {
        System.ServiceModel.Channels.CustomBinding binding = new System.ServiceModel.Channels.CustomBinding();
        binding.Elements.Add(new System.ServiceModel.Channels.TextMessageEncodingBindingElement(System.ServiceModel.Channels.MessageVersion.Soap11, System.Text.Encoding.UTF8));
        binding.Elements.Add(new System.ServiceModel.Channels.HttpTransportBindingElement());
        return binding;
    }
    
    private void addProtectionRequirements(System.ServiceModel.Channels.Binding binding)
    {
        if ((IsSecureMessageBinding(binding) == false))
        {
            return;
        }
        System.ServiceModel.Security.ChannelProtectionRequirements cpr = new System.ServiceModel.Security.ChannelProtectionRequirements();
        ApplyProtection("urn:TripiSilverlightWCFService/CreateNewTrip", cpr.IncomingSignatureParts, true);
        ApplyProtection("urn:TripiSilverlightWCFService/CreateNewTrip", cpr.IncomingEncryptionParts, true);
        ApplyProtection("urn:TripiSilverlightWCFService/GetTripsForUser", cpr.IncomingSignatureParts, true);
        ApplyProtection("urn:TripiSilverlightWCFService/GetTripsForUser", cpr.IncomingEncryptionParts, true);
        ApplyProtection("urn:TripiSilverlightWCFService/GetPositionNodesForTrip", cpr.IncomingSignatureParts, true);
        ApplyProtection("urn:TripiSilverlightWCFService/GetPositionNodesForTrip", cpr.IncomingEncryptionParts, true);
        ApplyProtection("urn:TripiSilverlightWCFService/AddPositionNode", cpr.IncomingSignatureParts, true);
        ApplyProtection("urn:TripiSilverlightWCFService/AddPositionNode", cpr.IncomingEncryptionParts, true);
        if ((binding.MessageVersion.Addressing == System.ServiceModel.Channels.AddressingVersion.None))
        {
            ApplyProtection("*", cpr.OutgoingSignatureParts, true);
            ApplyProtection("*", cpr.OutgoingEncryptionParts, true);
        }
        else
        {
            ApplyProtection("urn:TripiSilverlightWCFService/CreateNewTripResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("urn:TripiSilverlightWCFService/CreateNewTripResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("urn:TripiSilverlightWCFService/GetTripsForUserResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("urn:TripiSilverlightWCFService/GetTripsForUserResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("urn:TripiSilverlightWCFService/GetPositionNodesForTripResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("urn:TripiSilverlightWCFService/GetPositionNodesForTripResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("urn:TripiSilverlightWCFService/AddPositionNodeResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("urn:TripiSilverlightWCFService/AddPositionNodeResponse", cpr.OutgoingEncryptionParts, true);
        }
        this.Parameters.Add(cpr);
    }
}
