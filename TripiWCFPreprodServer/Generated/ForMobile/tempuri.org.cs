//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface ITripService
{
    
    int CreateNewTrip(string username, string tripName);
    
    Trip[] GetTripsForUser(string username);
    
    PositionNode[] GetPositionNodesForTrip(int tripID);
    
    void AddPositionNode(PositionNode node);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="CreateNewTrip", Namespace="http://tempuri.org/")]
public partial class CreateNewTripRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    public string username;
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=1)]
    public string tripName;
    
    public CreateNewTripRequest()
    {
    }
    
    public CreateNewTripRequest(string username, string tripName)
    {
        this.username = username;
        this.tripName = tripName;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="CreateNewTripResponse", Namespace="http://tempuri.org/")]
public partial class CreateNewTripResponse
{
    
    [System.Xml.Serialization.XmlElementAttribute(Namespace="http://tempuri.org/", Order=0)]
    public int CreateNewTripResult;
    
    public CreateNewTripResponse()
    {
    }
    
    public CreateNewTripResponse(int CreateNewTripResult)
    {
        this.CreateNewTripResult = CreateNewTripResult;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("NetCFSvcUtil", "3.5.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TripiWCF.Service")]
public partial class Trip
{
    
    private int idField;
    
    private bool idFieldSpecified;
    
    private string tripNameField;
    
    private string usernameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public int ID
    {
        get
        {
            return this.idField;
        }
        set
        {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IDSpecified
    {
        get
        {
            return this.idFieldSpecified;
        }
        set
        {
            this.idFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
    public string TripName
    {
        get
        {
            return this.tripNameField;
        }
        set
        {
            this.tripNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
    public string Username
    {
        get
        {
            return this.usernameField;
        }
        set
        {
            this.usernameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("NetCFSvcUtil", "3.5.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TripiWCF.Service")]
public partial class PositionNode
{
    
    private System.DateTime creationTimeField;
    
    private bool creationTimeFieldSpecified;
    
    private double latitudeField;
    
    private bool latitudeFieldSpecified;
    
    private double longitudeField;
    
    private bool longitudeFieldSpecified;
    
    private double speedField;
    
    private bool speedFieldSpecified;
    
    private int tripIDField;
    
    private bool tripIDFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public System.DateTime CreationTime
    {
        get
        {
            return this.creationTimeField;
        }
        set
        {
            this.creationTimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CreationTimeSpecified
    {
        get
        {
            return this.creationTimeFieldSpecified;
        }
        set
        {
            this.creationTimeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public double Latitude
    {
        get
        {
            return this.latitudeField;
        }
        set
        {
            this.latitudeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LatitudeSpecified
    {
        get
        {
            return this.latitudeFieldSpecified;
        }
        set
        {
            this.latitudeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public double Longitude
    {
        get
        {
            return this.longitudeField;
        }
        set
        {
            this.longitudeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LongitudeSpecified
    {
        get
        {
            return this.longitudeFieldSpecified;
        }
        set
        {
            this.longitudeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public double Speed
    {
        get
        {
            return this.speedField;
        }
        set
        {
            this.speedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SpeedSpecified
    {
        get
        {
            return this.speedFieldSpecified;
        }
        set
        {
            this.speedFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public int TripID
    {
        get
        {
            return this.tripIDField;
        }
        set
        {
            this.tripIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TripIDSpecified
    {
        get
        {
            return this.tripIDFieldSpecified;
        }
        set
        {
            this.tripIDFieldSpecified = value;
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetTripsForUser", Namespace="http://tempuri.org/")]
public partial class GetTripsForUserRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    public string username;
    
    public GetTripsForUserRequest()
    {
    }
    
    public GetTripsForUserRequest(string username)
    {
        this.username = username;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetTripsForUserResponse", Namespace="http://tempuri.org/")]
public partial class GetTripsForUserResponse
{
    
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/TripiWCF.Service")]
    public Trip[] GetTripsForUserResult;
    
    public GetTripsForUserResponse()
    {
    }
    
    public GetTripsForUserResponse(Trip[] GetTripsForUserResult)
    {
        this.GetTripsForUserResult = GetTripsForUserResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetPositionNodesForTrip", Namespace="http://tempuri.org/")]
public partial class GetPositionNodesForTripRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(Namespace="http://tempuri.org/", Order=0)]
    public int tripID;
    
    public GetPositionNodesForTripRequest()
    {
    }
    
    public GetPositionNodesForTripRequest(int tripID)
    {
        this.tripID = tripID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetPositionNodesForTripResponse", Namespace="http://tempuri.org/")]
public partial class GetPositionNodesForTripResponse
{
    
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/TripiWCF.Service")]
    public PositionNode[] GetPositionNodesForTripResult;
    
    public GetPositionNodesForTripResponse()
    {
    }
    
    public GetPositionNodesForTripResponse(PositionNode[] GetPositionNodesForTripResult)
    {
        this.GetPositionNodesForTripResult = GetPositionNodesForTripResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="AddPositionNode", Namespace="http://tempuri.org/")]
public partial class AddPositionNodeRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    public PositionNode node;
    
    public AddPositionNodeRequest()
    {
    }
    
    public AddPositionNodeRequest(PositionNode node)
    {
        this.node = node;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="AddPositionNodeResponse", Namespace="http://tempuri.org/")]
public partial class AddPositionNodeResponse
{
    
    public AddPositionNodeResponse()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class TripServiceClient : Microsoft.Tools.ServiceModel.CFClientBase<ITripService>, ITripService
{
    
    public TripServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
        addProtectionRequirements(binding);
    }
    
    private CreateNewTripResponse CreateNewTrip(CreateNewTripRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/ITripService/CreateNewTrip";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/ITripService/CreateNewTripResponse";
        info.ResponseIsWrapped = true;
        CreateNewTripResponse retVal = base.Invoke<CreateNewTripRequest, CreateNewTripResponse>(info, request);
        return retVal;
    }
    
    public int CreateNewTrip(string username, string tripName)
    {
        CreateNewTripRequest request = new CreateNewTripRequest(username, tripName);
        CreateNewTripResponse response = this.CreateNewTrip(request);
        return response.CreateNewTripResult;
    }
    
    private GetTripsForUserResponse GetTripsForUser(GetTripsForUserRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/ITripService/GetTripsForUser";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/ITripService/GetTripsForUserResponse";
        info.ResponseIsWrapped = true;
        GetTripsForUserResponse retVal = base.Invoke<GetTripsForUserRequest, GetTripsForUserResponse>(info, request);
        return retVal;
    }
    
    public Trip[] GetTripsForUser(string username)
    {
        GetTripsForUserRequest request = new GetTripsForUserRequest(username);
        GetTripsForUserResponse response = this.GetTripsForUser(request);
        return response.GetTripsForUserResult;
    }
    
    private GetPositionNodesForTripResponse GetPositionNodesForTrip(GetPositionNodesForTripRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/ITripService/GetPositionNodesForTrip";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/ITripService/GetPositionNodesForTripResponse";
        info.ResponseIsWrapped = true;
        GetPositionNodesForTripResponse retVal = base.Invoke<GetPositionNodesForTripRequest, GetPositionNodesForTripResponse>(info, request);
        return retVal;
    }
    
    public PositionNode[] GetPositionNodesForTrip(int tripID)
    {
        GetPositionNodesForTripRequest request = new GetPositionNodesForTripRequest(tripID);
        GetPositionNodesForTripResponse response = this.GetPositionNodesForTrip(request);
        return response.GetPositionNodesForTripResult;
    }
    
    private AddPositionNodeResponse AddPositionNode(AddPositionNodeRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/ITripService/AddPositionNode";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/ITripService/AddPositionNodeResponse";
        info.ResponseIsWrapped = true;
        AddPositionNodeResponse retVal = base.Invoke<AddPositionNodeRequest, AddPositionNodeResponse>(info, request);
        return retVal;
    }
    
    public void AddPositionNode(PositionNode node)
    {
        AddPositionNodeRequest request = new AddPositionNodeRequest(node);
        AddPositionNodeResponse response = this.AddPositionNode(request);
    }
    
    private void addProtectionRequirements(System.ServiceModel.Channels.Binding binding)
    {
        if ((IsSecureMessageBinding(binding) == false))
        {
            return;
        }
        System.ServiceModel.Security.ChannelProtectionRequirements cpr = new System.ServiceModel.Security.ChannelProtectionRequirements();
        ApplyProtection("http://tempuri.org/ITripService/CreateNewTrip", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/ITripService/CreateNewTrip", cpr.IncomingEncryptionParts, true);
        ApplyProtection("http://tempuri.org/ITripService/GetTripsForUser", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/ITripService/GetTripsForUser", cpr.IncomingEncryptionParts, true);
        ApplyProtection("http://tempuri.org/ITripService/GetPositionNodesForTrip", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/ITripService/GetPositionNodesForTrip", cpr.IncomingEncryptionParts, true);
        ApplyProtection("http://tempuri.org/ITripService/AddPositionNode", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/ITripService/AddPositionNode", cpr.IncomingEncryptionParts, true);
        if ((binding.MessageVersion.Addressing == System.ServiceModel.Channels.AddressingVersion.None))
        {
            ApplyProtection("*", cpr.OutgoingSignatureParts, true);
            ApplyProtection("*", cpr.OutgoingEncryptionParts, true);
        }
        else
        {
            ApplyProtection("http://tempuri.org/ITripService/CreateNewTripResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ITripService/CreateNewTripResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/ITripService/GetTripsForUserResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ITripService/GetTripsForUserResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/ITripService/GetPositionNodesForTripResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ITripService/GetPositionNodesForTripResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/ITripService/AddPositionNodeResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ITripService/AddPositionNodeResponse", cpr.OutgoingEncryptionParts, true);
        }
        this.Parameters.Add(cpr);
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface ICrossDomainPolicyResponder
{
    
    System.IO.Stream GetSilverlightPolicy();
    
    System.IO.Stream GetFlashPolicy();
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetSilverlightPolicy", Namespace="http://tempuri.org/")]
public partial class GetSilverlightPolicyRequest
{
    
    public GetSilverlightPolicyRequest()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetSilverlightPolicyResponse", Namespace="http://tempuri.org/")]
public partial class GetSilverlightPolicyResponse
{
    
    [System.Xml.Serialization.XmlElementAttribute(Namespace="http://tempuri.org/", Order=0)]
    public System.IO.Stream GetSilverlightPolicyResult;
    
    public GetSilverlightPolicyResponse()
    {
    }
    
    public GetSilverlightPolicyResponse(System.IO.Stream GetSilverlightPolicyResult)
    {
        this.GetSilverlightPolicyResult = GetSilverlightPolicyResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetFlashPolicy", Namespace="http://tempuri.org/")]
public partial class GetFlashPolicyRequest
{
    
    public GetFlashPolicyRequest()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetFlashPolicyResponse", Namespace="http://tempuri.org/")]
public partial class GetFlashPolicyResponse
{
    
    [System.Xml.Serialization.XmlElementAttribute(Namespace="http://tempuri.org/", Order=0)]
    public System.IO.Stream GetFlashPolicyResult;
    
    public GetFlashPolicyResponse()
    {
    }
    
    public GetFlashPolicyResponse(System.IO.Stream GetFlashPolicyResult)
    {
        this.GetFlashPolicyResult = GetFlashPolicyResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class CrossDomainPolicyResponderClient : Microsoft.Tools.ServiceModel.CFClientBase<ICrossDomainPolicyResponder>, ICrossDomainPolicyResponder
{
    
    public CrossDomainPolicyResponderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
        addProtectionRequirements(binding);
    }
    
    private GetSilverlightPolicyResponse GetSilverlightPolicy(GetSilverlightPolicyRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/ICrossDomainPolicyResponder/GetSilverlightPolicy";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/ICrossDomainPolicyResponder/GetSilverlightPolicyResponse";
        info.ResponseIsWrapped = true;
        GetSilverlightPolicyResponse retVal = base.Invoke<GetSilverlightPolicyRequest, GetSilverlightPolicyResponse>(info, request);
        return retVal;
    }
    
    public System.IO.Stream GetSilverlightPolicy()
    {
        GetSilverlightPolicyRequest request = new GetSilverlightPolicyRequest();
        GetSilverlightPolicyResponse response = this.GetSilverlightPolicy(request);
        return response.GetSilverlightPolicyResult;
    }
    
    private GetFlashPolicyResponse GetFlashPolicy(GetFlashPolicyRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/ICrossDomainPolicyResponder/GetFlashPolicy";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/ICrossDomainPolicyResponder/GetFlashPolicyResponse";
        info.ResponseIsWrapped = true;
        GetFlashPolicyResponse retVal = base.Invoke<GetFlashPolicyRequest, GetFlashPolicyResponse>(info, request);
        return retVal;
    }
    
    public System.IO.Stream GetFlashPolicy()
    {
        GetFlashPolicyRequest request = new GetFlashPolicyRequest();
        GetFlashPolicyResponse response = this.GetFlashPolicy(request);
        return response.GetFlashPolicyResult;
    }
    
    private void addProtectionRequirements(System.ServiceModel.Channels.Binding binding)
    {
        if ((IsSecureMessageBinding(binding) == false))
        {
            return;
        }
        System.ServiceModel.Security.ChannelProtectionRequirements cpr = new System.ServiceModel.Security.ChannelProtectionRequirements();
        ApplyProtection("http://tempuri.org/ICrossDomainPolicyResponder/GetSilverlightPolicy", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/ICrossDomainPolicyResponder/GetSilverlightPolicy", cpr.IncomingEncryptionParts, true);
        ApplyProtection("http://tempuri.org/ICrossDomainPolicyResponder/GetFlashPolicy", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/ICrossDomainPolicyResponder/GetFlashPolicy", cpr.IncomingEncryptionParts, true);
        if ((binding.MessageVersion.Addressing == System.ServiceModel.Channels.AddressingVersion.None))
        {
            ApplyProtection("*", cpr.OutgoingSignatureParts, true);
            ApplyProtection("*", cpr.OutgoingEncryptionParts, true);
        }
        else
        {
            ApplyProtection("http://tempuri.org/ICrossDomainPolicyResponder/GetSilverlightPolicyResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ICrossDomainPolicyResponder/GetSilverlightPolicyResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/ICrossDomainPolicyResponder/GetFlashPolicyResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ICrossDomainPolicyResponder/GetFlashPolicyResponse", cpr.OutgoingEncryptionParts, true);
        }
        this.Parameters.Add(cpr);
    }
}
